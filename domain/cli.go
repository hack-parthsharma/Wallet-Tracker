package cli

import (
	"encoding/json"
	"io/ioutil"

	"github.com/pkg/errors"

	"github.com/aydinnyunus/wallet-tracker/domain/repository"
)


/*
	Here we keep the necessary configuration of our cli.
*/

// global constants for file.
const ()

// global variables (not cool) for this file.
var ()


type Cli struct {

	UserAPIToken string `mapstructure:"USER_API_TOKEN" json:"user_api_token" flag:"user-api-token"`

	repository.Database `mapstructure:"DATABASE" flag:"database"`

	PrettyOutput bool `json:"pretty_output" yaml:"pretty_output" mapstructure:"PRETTY_OUTPUT" flag:"pretty-output"`

	Interactive bool `json:"-" yaml:"-" mapstructure:"INTERACTIVE" flag:"interactive"`
}

// Save stores current cli config to given file in json format.
func (c *Cli) Save(filePath string) error {
	data, err := json.Marshal(c)
	if err != nil {
		return errors.Wrap(err, "can not save cli config to file")
	}

	// using rw|rw|rw for permission.
	// #nosec
	return ioutil.WriteFile(filePath, data, 0644)
}

// Validate checks for bad/empty input inside config instances. Ids and Tokens are mostly generated by uuids.
func (c *Cli) Validate() error {
	var (
	// err error
	)

	// TODO add validation support
	if c.UserAPIToken == ""  {
		return errors.New("cli config has empty field")
	}

	return nil
}
